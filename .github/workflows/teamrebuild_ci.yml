name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tester:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Kernel Setup
        run: |
          # Load required kernel modules
          sudo modprobe nbd; sudo modprobe nvme; sudo modprobe nvmet; sudo modprobe xfs
          lsb_release -a
          cat /proc/version
          # Allocate 1024 2MiB hugepages
          echo 1024 | sudo tee /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages 1>/dev/null
          dmesg 

      - name: Env Setup
        run: |
          # We'll be running as root within docker so we don't need sudo
          sed -i 's/^runner/#runner/1' ./mayastor/.cargo/config

          # Launch the nix container as a daemon
          docker run -d --name "nix" --privileged --rm -v /dev:/dev:rw -v /dev/shm:/dev/shm:rw -v /dev/hugepages:/dev/hugepages:rw --network host -v $PWD:/MayaStor teamrebuild/ci:latest tail -f /dev/null

          # Setup cached cargo and node modules
          docker exec "nix" /bin/sh -c "mv /usr/src/app/mayastor-test/node_modules/ /MayaStor/mayastor-test; mkdir /MayaStor/.cargo 2>/dev/null || true; cat config >> /MayaStor/.cargo/config; cat config >> /MayaStor/mayastor/.cargo/config"

      - name: Build
        run: |
          docker exec "nix" /bin/sh -c "cd /MayaStor; nix-shell --run 'cargo build --all'"

      - name: Cargo Test Jsonrpc
        run: |
          docker exec "nix" /bin/sh -c "cd /MayaStor; nix-shell --run 'pushd jsonrpc && cargo test && popd'"

      - name: Cargo Test Mayastor
        run: |
          docker exec "nix" /bin/sh -c "cd /MayaStor; nix-shell --run 'pushd mayastor && ( cargo test -- --test-threads=1 || dmesg ) && popd'"
          docker exec "nix" /bin/sh -c "cd /MayaStor; nix-shell --run 'pushd mayastor && ( cargo test -- --test-threads=1 || dmesg ) && popd'"
          docker exec "nix" /bin/sh -c "cd /MayaStor; nix-shell --run 'pushd mayastor && ( cargo test -- --test-threads=1 || dmesg ) && popd'"
          docker exec "nix" /bin/sh -c "cd /MayaStor; nix-shell --run 'pushd mayastor && ( cargo test -- --test-threads=1 || dmesg ) && popd'"

      - name: End
        run: |
          docker kill "nix"

  linter:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Nix Setup
        run: |
          # Launch the nix container as a daemon
          docker run -d --name "nix" --rm -v $PWD:/MayaStor teamrebuild/ci:latest tail -f /dev/null

      - name: End
        run: |
          docker kill "nix"

